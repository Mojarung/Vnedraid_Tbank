#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TradingView Parser
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞
"""

from tradingview_parser import TradingViewParser
import json


def main():
    """–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞"""
    
    print("üî• TradingView Parser - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø–∞—Ä—Å–µ—Ä–∞
    parser = TradingViewParser(timeout=10)
    
    # –ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    print("\nüìä –ü—Ä–∏–º–µ—Ä 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 5 –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("-" * 40)
    
    news_items = parser.get_news(limit=5)
    
    if news_items:
        for i, news in enumerate(news_items, 1):
            print(f"{i}. {news.title}")
            print(f"   –í—Ä–µ–º—è: {news.published_datetime}")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {news.provider.get('name', 'N/A')}")
            print()
    else:
        print("‚ùå –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–∏–º–µ—Ä 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π
    print("\nüóÇÔ∏è –ü—Ä–∏–º–µ—Ä 2: –î–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π")
    print("-" * 40)
    
    news_dict = parser.get_news_as_dict(limit=3)
    
    if news_dict:
        print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(news_dict)} –Ω–æ–≤–æ—Å—Ç–µ–π:")
        for i, news in enumerate(news_dict, 1):
            print(f"{i}. {news['title'][:50]}...")
            print(f"   ID: {news['id']}")
            print(f"   –°–∏–º–≤–æ–ª—ã: {len(news['related_symbols'])} —à—Ç.")
            print()
    
    # –ü—Ä–∏–º–µ—Ä 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
    print("\nüîç –ü—Ä–∏–º–µ—Ä 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º")
    print("-" * 40)
    
    all_news = parser.get_news(limit=20)
    
    if all_news:
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º
        providers = {}
        for news in all_news:
            provider_name = news.provider.get('name', 'Unknown')
            if provider_name not in providers:
                providers[provider_name] = []
            providers[provider_name].append(news)
        
        print("–ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–æ–≤–æ—Å—Ç–µ–π:")
        for provider, provider_news in providers.items():
            print(f"  ‚Ä¢ {provider}: {len(provider_news)} –Ω–æ–≤–æ—Å—Ç–µ–π")
    
    # –ü—Ä–∏–º–µ—Ä 4: –ê–Ω–∞–ª–∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    print("\nüìà –ü—Ä–∏–º–µ—Ä 4: –ê–Ω–∞–ª–∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤")
    print("-" * 40)
    
    if all_news:
        symbols = []
        for news in all_news:
            for symbol_data in news.related_symbols:
                symbol = symbol_data.get('symbol', '')
                if symbol:
                    symbols.append(symbol)
        
        # –ü–æ–¥—Å—á–µ—Ç —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        from collections import Counter
        symbol_counts = Counter(symbols)
        
        print("–¢–æ–ø-5 —Å–∞–º—ã—Ö —É–ø–æ–º–∏–Ω–∞–µ–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤:")
        for symbol, count in symbol_counts.most_common(5):
            print(f"  ‚Ä¢ {symbol}: {count} —Ä–∞–∑")
    
    # –ü—Ä–∏–º–µ—Ä 5: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    print("\nüíæ –ü—Ä–∏–º–µ—Ä 5: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
    print("-" * 40)
    
    if news_dict:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ JSON
        with open('latest_tradingview_news.json', 'w', encoding='utf-8') as f:
            json.dump(news_dict, f, ensure_ascii=False, indent=2)
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ latest_tradingview_news.json")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        with open('latest_tradingview_news.txt', 'w', encoding='utf-8') as f:
            f.write("TradingView News Summary\n")
            f.write("=" * 50 + "\n\n")
            
            for i, news in enumerate(news_dict, 1):
                f.write(f"{i}. {news['title']}\n")
                f.write(f"   Time: {news['published_datetime']}\n")
                f.write(f"   Source: {news['provider'].get('name', 'N/A')}\n")
                if news['link']:
                    f.write(f"   Link: {news['link']}\n")
                f.write("\n")
        
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ latest_tradingview_news.txt")


if __name__ == "__main__":
    main() 